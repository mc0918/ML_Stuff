{"id":"chart.html","dependencies":[{"name":"_css_loader","parent":"C:\\Users\\mcamp\\Desktop\\DrMikul\\projects\\machineLearning\\tensorFlow1\\chart.html","resolved":"C:\\Users\\mcamp\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\mcamp\\Desktop\\DrMikul\\projects\\machineLearning\\package.json","includedInParent":true,"mtime":1555026312966}],"generated":{"html":"<html>\r\n  <head>\r\n    <!-- Loading in TensorFlow.js version 0.11.2  NOT MOST RECENT VERSION... I THINK NEWER ONE CAUSES ERRORS WITH MAKING THE CHART-->\r\n    <!-- OR MAYBE THE CHART SCRIPT JUST NEEDS TO COME SECOND AND I WASN'T DOING THAT -->\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.11.2\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    x: <input type=\"text\" id=\"x\"> y: <input type=\"text\" id=\"y\">\r\n\r\n    <input type=\"button\" id=\"append\" value=\"submit\">\r\n\r\n    <div style=\"padding:50px\">\r\n      <canvas id=\"myChart\" width=\"600\" height=\"300\"></canvas>\r\n    </div>\r\n\r\n    <script>//MAKE SURE TO DO MULTIPLE INPUTS TO GET BEST FIT LINE TO APPEAR\n//USES LINEAR REGRESSION TO MAKE A LINE THAT BEST FITS USER INPUTTED DATA\nvar xs = []; // starts empty, to be populated with .push\n\nvar ys = []; // starts empty, to be populated with .push\n\nvar bestfit = []; // to be populated by tf.js\n//Create the model\n\nvar model = tf.sequential();\nmodel.add(tf.layers.leakyReLU({\n  units: 128,\n  inputShape: [1]\n})); // layer 1\n\nmodel.add(tf.layers.leakyReLU({\n  units: 128,\n  inputShape: [128]\n})); // layer 2\n\nmodel.add(tf.layers.dense({\n  units: 1,\n  inputShape: [128]\n})); // output layer\n\nmodel.compile({\n  loss: \"meanSquaredError\",\n  optimizer: \"adam\"\n}); // compile with params\n\ndocument.getElementById(\"x\").value = 1; // create a starting value for our x\n// the append id is given to our submit button, this will be called\n\ndocument.getElementById(\"append\").onclick = function () {\n  var x = document.getElementById(\"x\").value; // grab the current value for x\n\n  var y = document.getElementById(\"y\").value; // grab the current value for y\n\n  xs.push(x); // append that value to the xs\n\n  ys.push(y); // append that value to the ys\n\n  document.getElementById(\"x\").value = parseInt(x) + 1; // add 1 to the x automatically\n  // Train the model...then:\n\n  model.fit(tf.tensor(xs), tf.tensor(ys), {\n    epochs: 150\n  }).then(function () {\n    bestfit = model.predict(tf.tensor(xs, [xs.length, 1])).dataSync(); // create best-fit line from xs data\n\n    var ctx = document.getElementById(\"myChart\").getContext(\"2d\"); // begin chart\n    // Chart data and settings:\n\n    var myChart = new Chart(ctx, {\n      type: \"line\",\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      },\n      data: {\n        labels: xs,\n        datasets: [{\n          label: \"Original Data\",\n          data: ys,\n          borderWidth: 1\n        }, {\n          label: \"Best Fit line\",\n          data: bestfit,\n          borderWidth: 1,\n          borderColor: \"#FF0000\",\n          backgroundColor: \"rgba(1,1,1,0)\"\n        }]\n      }\n    });\n  });\n};</script>\r\n  </body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"24ffe69b79c3337cf07924db5c4616ab","cacheData":{"env":{}}}